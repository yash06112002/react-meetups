{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Yash\\\\web dev\\\\nextjs\\\\next-project\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport Head from 'next/head';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      title: props.meetupData.title,\n      image: props.meetupData.image,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://yash:yash@cluster0.watljam.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data from an API\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\"mongodb+srv://yash:yash@cluster0.watljam.mongodb.net/?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetup = await meetupsCollection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  client.close(); // console.log(meetupId)\n\n  return {\n    props: {\n      meetupData: {\n        id: meetup._id.toString(),\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description\n      }\n    },\n    revalidate: 10\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["D:/Yash/web dev/nextjs/next-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","Head","MeetupDetails","props","meetupData","title","description","image","address","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","findOne","id","revalidate"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,YAAD;AACI,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEI,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBG,KAF5B;AAGI,MAAA,OAAO,EAAEJ,KAAK,CAACC,UAAN,CAAiBI,OAH9B;AAII,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJlC;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AAeH,CAhBD;;AAiBA,OAAO,eAAeG,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,mFAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AACAR,EAAAA,MAAM,CAACS,KAAP;AACA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AAAV,KAAL,CAAlB;AAFJ,GAAP;AAIH;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoB,mFAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMS,MAAM,GAAG,MAAMV,iBAAiB,CAACgB,OAAlB,CAA0B;AAAEZ,IAAAA,GAAG,EAAElB,QAAQ,CAAC0B,QAAD;AAAf,GAA1B,CAArB;AACAf,EAAAA,MAAM,CAACS,KAAP,GAR0C,CAS1C;;AACA,SAAO;AACHhB,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACR0B,QAAAA,EAAE,EAAEP,MAAM,CAACN,GAAP,CAAWS,QAAX,EADI;AAERrB,QAAAA,KAAK,EAAEkB,MAAM,CAAClB,KAFN;AAGRG,QAAAA,OAAO,EAAEe,MAAM,CAACf,OAHR;AAIRD,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAJN;AAKRD,QAAAA,WAAW,EAAEiB,MAAM,CAACjB;AALZ;AADT,KADJ;AAUHyB,IAAAA,UAAU,EAAE;AAVT,GAAP;AAYH;AACD,eAAe7B,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\"\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"\r\nimport Head from 'next/head'\r\n\r\nconst MeetupDetails = (props) => {\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>{props.meetupData.title}</title>\r\n                <meta name=\"description\" content={props.meetupData.description} />\r\n            </Head>\r\n            <MeetupDetail\r\n                title={props.meetupData.title}\r\n                image={props.meetupData.image}\r\n                address={props.meetupData.address}\r\n                description={props.meetupData.description}\r\n            />\r\n        </>\r\n\r\n    )\r\n}\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect(\"mongodb+srv://yash:yash@cluster0.watljam.mongodb.net/?retryWrites=true&w=majority\")\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection('meetups');\r\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n    client.close();\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({ params: { meetupId: meetup._id.toString() } }))\r\n    }\r\n}\r\nexport async function getStaticProps(context) {\r\n    // fetch data from an API\r\n    const meetupId = context.params.meetupId;\r\n\r\n    const client = await MongoClient.connect(\"mongodb+srv://yash:yash@cluster0.watljam.mongodb.net/?retryWrites=true&w=majority\")\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection('meetups');\r\n    const meetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\r\n    client.close();\r\n    // console.log(meetupId)\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: meetup._id.toString(),\r\n                title: meetup.title,\r\n                address: meetup.address,\r\n                image: meetup.image,\r\n                description: meetup.description\r\n            }\r\n        },\r\n        revalidate: 10\r\n    }\r\n}\r\nexport default MeetupDetails"]},"metadata":{},"sourceType":"module"}