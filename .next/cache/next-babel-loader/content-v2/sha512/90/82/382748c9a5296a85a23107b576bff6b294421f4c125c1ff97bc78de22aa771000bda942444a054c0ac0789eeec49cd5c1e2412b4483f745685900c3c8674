{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Yash\\\\web dev\\\\nextjs\\\\next-project\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport Head from 'next/head';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.meetupData.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.meetupData.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      title: props.meetupData.title,\n      image: props.meetupData.image,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["D:/Yash/web dev/nextjs/next-project/pages/[meetupId]/index.js"],"names":["MeetupDetail","Head","MeetupDetails","props","meetupData","title","description","image","address"],"mappings":";;;;;;AACA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7B,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQA,KAAK,CAACC,UAAN,CAAiBC;AAAzB;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAEF,KAAK,CAACC,UAAN,CAAiBE;AAAnD;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAKI,QAAC,YAAD;AACI,MAAA,KAAK,EAAEH,KAAK,CAACC,UAAN,CAAiBC,KAD5B;AAEI,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBG,KAF5B;AAGI,MAAA,OAAO,EAAEJ,KAAK,CAACC,UAAN,CAAiBI,OAH9B;AAII,MAAA,WAAW,EAAEL,KAAK,CAACC,UAAN,CAAiBE;AAJlC;AAAA;AAAA;AAAA;AAAA,aALJ;AAAA,kBADJ;AAeH,CAhBD;;KAAMJ,a;;AAmDN,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\"\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\"\r\nimport Head from 'next/head'\r\n\r\nconst MeetupDetails = (props) => {\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>{props.meetupData.title}</title>\r\n                <meta name=\"description\" content={props.meetupData.description} />\r\n            </Head>\r\n            <MeetupDetail\r\n                title={props.meetupData.title}\r\n                image={props.meetupData.image}\r\n                address={props.meetupData.address}\r\n                description={props.meetupData.description}\r\n            />\r\n        </>\r\n\r\n    )\r\n}\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect(\"mongodb+srv://yash:yash@cluster0.watljam.mongodb.net/?retryWrites=true&w=majority\")\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection('meetups');\r\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n    client.close();\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({ params: { meetupId: meetup._id.toString() } }))\r\n    }\r\n}\r\nexport async function getStaticProps(context) {\r\n    // fetch data from an API\r\n    const meetupId = context.params.meetupId;\r\n\r\n    const client = await MongoClient.connect(\"mongodb+srv://yash:yash@cluster0.watljam.mongodb.net/?retryWrites=true&w=majority\")\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection('meetups');\r\n    const meetup = await meetupsCollection.findOne({ _id: ObjectId(meetupId) });\r\n    client.close();\r\n    // console.log(meetupId)\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: meetup._id.toString(),\r\n                title: meetup.title,\r\n                address: meetup.address,\r\n                image: meetup.image,\r\n                description: meetup.description\r\n            }\r\n        },\r\n        revalidate: 10\r\n    }\r\n}\r\nexport default MeetupDetails"]},"metadata":{},"sourceType":"module"}